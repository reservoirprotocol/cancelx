/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { MultiX, MultiXInterface } from "../../src/MultiX";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Breakwater__InvalidConsideration",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidExtraData",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "fulfiller",
        type: "address",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
    ],
    name: "InvalidFulfiller",
    type: "error",
  },
  {
    inputs: [],
    name: "MissingExtraData",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "currentTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiration",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
    ],
    name: "SignatureExpired",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
    ],
    name: "SignerAlreadyAdded",
    type: "error",
  },
  {
    inputs: [],
    name: "SignerCannotBeReauthorized",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
    ],
    name: "SignerNotActive",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
    ],
    name: "SignerNotApproved",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "signer",
        type: "address",
      },
    ],
    name: "SignerAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "signer",
        type: "address",
      },
    ],
    name: "SignerRemoved",
    type: "event",
  },
  {
    inputs: [],
    name: "CONSIDERATION_ITEM_HASHTYPE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ORDER_VALIDITY_HASHTYPE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
    ],
    name: "addSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
    ],
    name: "removeSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "signerStatus",
    outputs: [
      {
        internalType: "enum Breakwater.SignerStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "orderHash",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "fulfiller",
            type: "address",
          },
          {
            internalType: "address",
            name: "offerer",
            type: "address",
          },
          {
            components: [
              {
                internalType: "enum ItemType",
                name: "itemType",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "identifier",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct SpentItem[]",
            name: "offer",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "enum ItemType",
                name: "itemType",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "identifier",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "address payable",
                name: "recipient",
                type: "address",
              },
            ],
            internalType: "struct ReceivedItem[]",
            name: "consideration",
            type: "tuple[]",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "orderHashes",
            type: "bytes32[]",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "zoneHash",
            type: "bytes32",
          },
        ],
        internalType: "struct ZoneParameters",
        name: "zoneParameters",
        type: "tuple",
      },
    ],
    name: "validateOrder",
    outputs: [
      {
        internalType: "bytes4",
        name: "validOrderMagicValue",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101406040523480156200001257600080fd5b50604051620018f0380380620018f08339810160408190526200003591620001f0565b815160208084019190912082518383012060e08290526101008190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818801819052818301969096526060810194909452608080850193909352308483018190528151808603909301835260c094850190915281519190950120905291909152610120528181620000d133620000db565b505050506200025a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200015357600080fd5b81516001600160401b03808211156200017057620001706200012b565b604051601f8301601f19908116603f011681019082821181831017156200019b576200019b6200012b565b81604052838152602092508683858801011115620001b857600080fd5b600091505b83821015620001dc5785820183015181830184015290820190620001bd565b600093810190920192909252949350505050565b600080604083850312156200020457600080fd5b82516001600160401b03808211156200021c57600080fd5b6200022a8683870162000141565b935060208501519150808211156200024157600080fd5b50620002508582860162000141565b9150509250929050565b60805160a05160c05160e0516101005161012051611646620002aa6000396000611078015260006110c7015260006110a201526000610ffb015260006110250152600061104f01526116466000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c80638da5cb5b11610076578063aaf3a79e1161005b578063aaf3a79e14610164578063bfe51c1014610177578063f2fde38b1461018a57600080fd5b80638da5cb5b14610119578063a7528e5b1461013457600080fd5b806307e634c1146100a857806317b1f942146100c35780633423032314610107578063715018a61461010f575b600080fd5b6100b061019d565b6040519081526020015b60405180910390f35b6100d66100d13660046111d9565b6102c7565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020016100ba565b6100b06104e2565b610117610561565b005b6000546040516001600160a01b0390911681526020016100ba565b610157610142366004611231565b60016020526000908152604090205460ff1681565b6040516100ba9190611264565b610117610172366004611231565b610575565b610117610185366004611231565b61064d565b610117610198366004611231565b610766565b6040517f52656365697665644974656d280000000000000000000000000000000000000060208201527f75696e7438206974656d547970652c0000000000000000000000000000000000602d8201527f6164647265737320746f6b656e2c000000000000000000000000000000000000603c8201527f75696e74323536206964656e7469666965722c00000000000000000000000000604a8201527f75696e7432353620616d6f756e742c0000000000000000000000000000000000605d8201527f6164647265737320726563697069656e74000000000000000000000000000000606c8201527f2900000000000000000000000000000000000000000000000000000000000000607d820152607e015b6040516020818303038152906040528051906020012081565b600060016102d860a084018461127e565b90501015610312576040517f8c43c55a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b606261032160a084018461127e565b9050101561035b576040517f7ab7059600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008080808061036e60a088018861127e565b81019061037b919061136f565b9398509196509450925090507fff0000000000000000000000000000000000000000000000000000000000000085161515806103b957508151604014155b156103f0576040517f7ab7059600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b0384161580159061042957506104136040880160208901611231565b6001600160a01b0316846001600160a01b031614155b15610490578361043f6040890160208a01611231565b6040517f1bcf9bb70000000000000000000000000000000000000000000000000000000081526001600160a01b03928316600482015291166024820152873560448201526064015b60405180910390fd5b6104ac846bffffffffffffffffffffffff8516893584866107f6565b6104b687826108fd565b507f17b1f942000000000000000000000000000000000000000000000000000000009695505050505050565b6040516020016102ae907f5369676e65644f7264657228616464726573732066756c66696c6c65722c756981527f6e743235362065787069726174696f6e2c62797465733332206f72646572486160208201527f73682c627974657320636f6e7465787429000000000000000000000000000000604082015260510190565b6105696109ad565b6105736000610a07565b565b61057d6109ad565b6001600160a01b03811660009081526001602081905260409091205460ff16908160028111156105af576105af61124e565b03610610576001600160a01b038216600081815260016020908152604091829020805460ff1916600217905590519182527f3525e22824a8a7df2c9a6029941c824cf95b6447f1e13d5128fd3826d35afe8b91015b60405180910390a15050565b6040517f3a5a4c210000000000000000000000000000000000000000000000000000000081526001600160a01b0383166004820152602401610487565b6106556109ad565b6001600160a01b03811660009081526001602052604081205460ff16908160028111156106845761068461124e565b036106de576001600160a01b038216600081815260016020818152604092839020805460ff191690921790915590519182527f47d1c22a25bb3a5d4e481b9b1e6944c2eade3181a0a20b495ed61d35b5323f249101610604565b60018160028111156106f2576106f261124e565b03610734576040517fcb89b9b00000000000000000000000000000000000000000000000000000000081526001600160a01b0383166004820152602401610487565b6040517f9321fad100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61076e6109ad565b6001600160a01b0381166107ea5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610487565b6107f381610a07565b50565b83421115610840576040517f431be9c10000000000000000000000000000000000000000000000000000000081524260048201526024810185905260448101849052606401610487565b600061084e86868686610a6f565b9050600080838060200190518101906108679190611441565b915091506000610878848484610b60565b905060016001600160a01b03821660009081526001602052604090205460ff1660028111156108a9576108a961124e565b146108f2576040517f682498150000000000000000000000000000000000000000000000000000000081526001600160a01b038216600482015260248101889052604401610487565b505050505050505050565b600061090882611465565b90508061097161091b60808601866114aa565b808060200260200160405190810160405280939291908181526020016000905b828210156109675761095860a083028601368190038101906114f3565b8152602001906001019061093b565b5050505050610b86565b146109a8576040517f6001c01600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b6000546001600160a01b031633146105735760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610487565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000610b57604051602001610af3907f5369676e65644f7264657228616464726573732066756c66696c6c65722c756981527f6e743235362065787069726174696f6e2c62797465733332206f72646572486160208201527f73682c627974657320636f6e7465787429000000000000000000000000000000604082015260510190565b60408051601f198184030181528282528051602091820120865187830120918401526001600160a01b03891691830191909152606082018790526080820186905260a082015260c00160405160208183030381529060405280519060200120610c54565b95945050505050565b6000806000610b70868686610cc3565b91509150610b7d81610d15565b50949350505050565b8051600090818167ffffffffffffffff811115610ba557610ba56112cc565b604051908082528060200260200182016040528015610bce578160200160208202803683370190505b50905060005b82811015610c2357610bfe858281518110610bf157610bf161157f565b6020026020010151610e7a565b828281518110610c1057610c1061157f565b6020908102919091010152600101610bd4565b5080604051602001610c359190611595565b6040516020818303038152906040528051906020012092505050919050565b6000610cbd610c61610fee565b836040517f19010000000000000000000000000000000000000000000000000000000000006020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b92915050565b6000807f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831681610cf960ff86901c601b6115cb565b9050610d0787828885611115565b935093505050935093915050565b6000816004811115610d2957610d2961124e565b03610d315750565b6001816004811115610d4557610d4561124e565b03610d925760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610487565b6002816004811115610da657610da661124e565b03610df35760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610487565b6003816004811115610e0757610e0761124e565b036107f35760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f75650000000000000000000000000000000000000000000000000000000000006064820152608401610487565b6040517f52656365697665644974656d280000000000000000000000000000000000000060208201527f75696e7438206974656d547970652c0000000000000000000000000000000000602d8201527f6164647265737320746f6b656e2c000000000000000000000000000000000000603c8201527f75696e74323536206964656e7469666965722c00000000000000000000000000604a8201527f75696e7432353620616d6f756e742c0000000000000000000000000000000000605d8201527f6164647265737320726563697069656e74000000000000000000000000000000606c8201527f2900000000000000000000000000000000000000000000000000000000000000607d820152600090607e016040516020818303038152906040528051906020012082600001518360200151846040015185606001518660800151604051602001610fd1969594939291906115ec565b604051602081830303815290604052805190602001209050919050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561104757507f000000000000000000000000000000000000000000000000000000000000000046145b1561107157507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561114c57506000905060036111d0565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156111a0573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166111c9576000600192509250506111d0565b9150600090505b94509492505050565b6000602082840312156111eb57600080fd5b813567ffffffffffffffff81111561120257600080fd5b8201610140818503121561121557600080fd5b9392505050565b6001600160a01b03811681146107f357600080fd5b60006020828403121561124357600080fd5b81356112158161121c565b634e487b7160e01b600052602160045260246000fd5b60208101600383106112785761127861124e565b91905290565b6000808335601e1984360301811261129557600080fd5b83018035915067ffffffffffffffff8211156112b057600080fd5b6020019150368190038213156112c557600080fd5b9250929050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126112f357600080fd5b813567ffffffffffffffff8082111561130e5761130e6112cc565b604051601f8301601f19908116603f01168101908282118183101715611336576113366112cc565b8160405283815286602085880101111561134f57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600060a0868803121561138757600080fd5b85357fff00000000000000000000000000000000000000000000000000000000000000811681146113b757600080fd5b945060208601356113c78161121c565b935060408601356bffffffffffffffffffffffff811681146113e857600080fd5b9250606086013567ffffffffffffffff8082111561140557600080fd5b61141189838a016112e2565b9350608088013591508082111561142757600080fd5b50611434888289016112e2565b9150509295509295909350565b6000806040838503121561145457600080fd5b505080516020909101519092909150565b805160208083015191908110156114a4577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8160200360031b1b821691505b50919050565b6000808335601e198436030181126114c157600080fd5b83018035915067ffffffffffffffff8211156114dc57600080fd5b602001915060a0810236038213156112c557600080fd5b600060a0828403121561150557600080fd5b60405160a0810181811067ffffffffffffffff82111715611528576115286112cc565b60405282356006811061153a57600080fd5b8152602083013561154a8161121c565b80602083015250604083013560408201526060830135606082015260808301356115738161121c565b60808201529392505050565b634e487b7160e01b600052603260045260246000fd5b815160009082906020808601845b838110156115bf578151855293820193908201906001016115a3565b50929695505050505050565b80820180821115610cbd57634e487b7160e01b600052601160045260246000fd5b86815260c08101600687106116035761160361124e565b8660208301526001600160a01b03808716604084015285606084015284608084015280841660a08401525097965050505050505056fea164736f6c6343000811000a";

type MultiXConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MultiXConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MultiX__factory extends ContractFactory {
  constructor(...args: MultiXConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name: PromiseOrValue<string>,
    version: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MultiX> {
    return super.deploy(name, version, overrides || {}) as Promise<MultiX>;
  }
  override getDeployTransaction(
    name: PromiseOrValue<string>,
    version: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name, version, overrides || {});
  }
  override attach(address: string): MultiX {
    return super.attach(address) as MultiX;
  }
  override connect(signer: Signer): MultiX__factory {
    return super.connect(signer) as MultiX__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MultiXInterface {
    return new utils.Interface(_abi) as MultiXInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MultiX {
    return new Contract(address, _abi, signerOrProvider) as MultiX;
  }
}
