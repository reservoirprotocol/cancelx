/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Breakwater, BreakwaterInterface } from "../Breakwater";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Breakwater__InvalidOrder",
    type: "error",
  },
  {
    inputs: [],
    name: "Breakwater__InvalidSigner",
    type: "error",
  },
  {
    inputs: [],
    name: "Breakwater__OrderValidityExpired",
    type: "error",
  },
  {
    inputs: [],
    name: "MINT_TOKEN_HASHTYPE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "isValidOrder",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "offerer",
                type: "address",
              },
              {
                internalType: "address",
                name: "zone",
                type: "address",
              },
              {
                components: [
                  {
                    internalType: "enum ItemType",
                    name: "itemType",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "token",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "identifierOrCriteria",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "startAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "endAmount",
                    type: "uint256",
                  },
                ],
                internalType: "struct OfferItem[]",
                name: "offer",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "enum ItemType",
                    name: "itemType",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "token",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "identifierOrCriteria",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "startAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "endAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "address payable",
                    name: "recipient",
                    type: "address",
                  },
                ],
                internalType: "struct ConsiderationItem[]",
                name: "consideration",
                type: "tuple[]",
              },
              {
                internalType: "enum OrderType",
                name: "orderType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "startTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "endTime",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "zoneHash",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "salt",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "conduitKey",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "totalOriginalConsiderationItems",
                type: "uint256",
              },
            ],
            internalType: "struct OrderParameters",
            name: "parameters",
            type: "tuple",
          },
          {
            internalType: "uint120",
            name: "numerator",
            type: "uint120",
          },
          {
            internalType: "uint120",
            name: "denominator",
            type: "uint120",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct AdvancedOrder",
        name: "order",
        type: "tuple",
      },
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "orderIndex",
            type: "uint256",
          },
          {
            internalType: "enum Side",
            name: "side",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "bytes32[]",
            name: "criteriaProof",
            type: "bytes32[]",
          },
        ],
        internalType: "struct CriteriaResolver[]",
        name: "",
        type: "tuple[]",
      },
    ],
    name: "isValidOrderIncludingExtraData",
    outputs: [
      {
        internalType: "bytes4",
        name: "validOrderMagicValue",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "signer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x61014060405234801561001157600080fd5b50604051610b7c380380610b7c8339810160408190526100309161017f565b815160209283012081519183019190912060e08290526101008190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818801819052818301969096526060810194909452608080850193909352308483018190528151808603909301835260c094850190915281519190950120905291909152610120526101e2565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126100eb57600080fd5b81516001600160401b0380821115610105576101056100c4565b604051601f8301601f19908116603f0116810190828211818310171561012d5761012d6100c4565b8160405283815260209250868385880101111561014957600080fd5b600091505b8382101561016b578582018301518183018401529082019061014e565b600093810190920192909252949350505050565b6000806040838503121561019257600080fd5b82516001600160401b03808211156101a957600080fd5b6101b5868387016100da565b935060208501519150808211156101cb57600080fd5b506101d8858286016100da565b9150509250929050565b60805160a05160c05160e051610100516101205161094b6102316000396000610359015260006103a801526000610383015260006102dc0152600061030601526000610330015261094b6000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630e1d31dc14610051578063238ac9331461009557806333131570146100c0578063d6f092f7146100d3575b600080fd5b61005f61004c36600461066d565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020015b60405180910390f35b6000546100a8906001600160a01b031681565b6040516001600160a01b03909116815260200161008c565b61005f6100ce3660046106f6565b610108565b6100fa7fafc60ebf9f3db10532146b7d98ec0b4c86afb5e9c72177b4877bbac7c44bd3d081565b60405190815260200161008c565b6000808061011960808901896107ad565b8101906101269190610864565b9150915081602001518a1461014e5760405163d8c04d4360e01b815260040160405180910390fd5b610158828261016e565b506303874c7760e21b9998505050505050505050565b815143811015610191576040516367db9e7f60e11b815260040160405180910390fd5b60006101a18285602001516101d0565b90506101ad8184610233565b6101ca576040516377998e6b60e01b815260040160405180910390fd5b50505050565b604080517fafc60ebf9f3db10532146b7d98ec0b4c86afb5e9c72177b4877bbac7c44bd3d060208201529081018390526060810182905260009061022c9060800160405160208183030381529060405280519060200120610257565b9392505050565b600061023f83836102ab565b6000546001600160a01b039182169116149392505050565b60006102a56102646102cf565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b92915050565b60008060006102ba85856103f6565b915091506102c78161043b565b509392505050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561032857507f000000000000000000000000000000000000000000000000000000000000000046145b1561035257507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b600080825160410361042c5760208301516040840151606085015160001a6104208782858561058d565b94509450505050610434565b506000905060025b9250929050565b600081600481111561044f5761044f610928565b036104575750565b600181600481111561046b5761046b610928565b036104bd5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064015b60405180910390fd5b60028160048111156104d1576104d1610928565b0361051e5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016104b4565b600381600481111561053257610532610928565b0361058a5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016104b4565b50565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156105c45750600090506003610648565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610618573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661064157600060019250925050610648565b9150600090505b94509492505050565b80356001600160a01b038116811461066857600080fd5b919050565b6000806000806080858703121561068357600080fd5b8435935061069360208601610651565b92506106a160408601610651565b9396929550929360600135925050565b60008083601f8401126106c357600080fd5b50813567ffffffffffffffff8111156106db57600080fd5b6020830191508360208260051b850101111561043457600080fd5b600080600080600080600060a0888a03121561071157600080fd5b8735965061072160208901610651565b9550604088013567ffffffffffffffff8082111561073e57600080fd5b9089019060a0828c03121561075257600080fd5b9095506060890135908082111561076857600080fd5b6107748b838c016106b1565b909650945060808a013591508082111561078d57600080fd5b5061079a8a828b016106b1565b989b979a50959850939692959293505050565b6000808335601e198436030181126107c457600080fd5b83018035915067ffffffffffffffff8211156107df57600080fd5b60200191503681900382131561043457600080fd5b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff8111828210171561082d5761082d6107f4565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561085c5761085c6107f4565b604052919050565b600080828403606081121561087857600080fd5b604081121561088657600080fd5b5061088f61080a565b833581526020808501358183015290925060408401359067ffffffffffffffff808311156108bc57600080fd5b828601925086601f8401126108d057600080fd5b8235818111156108e2576108e26107f4565b6108f4601f8201601f19168401610833565b9150808252878382860101111561090a57600080fd5b80838501848401376000838284010152508093505050509250929050565b634e487b7160e01b600052602160045260246000fdfea164736f6c6343000811000a";

type BreakwaterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BreakwaterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Breakwater__factory extends ContractFactory {
  constructor(...args: BreakwaterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name: string,
    version: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Breakwater> {
    return super.deploy(name, version, overrides || {}) as Promise<Breakwater>;
  }
  override getDeployTransaction(
    name: string,
    version: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name, version, overrides || {});
  }
  override attach(address: string): Breakwater {
    return super.attach(address) as Breakwater;
  }
  override connect(signer: Signer): Breakwater__factory {
    return super.connect(signer) as Breakwater__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BreakwaterInterface {
    return new utils.Interface(_abi) as BreakwaterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Breakwater {
    return new Contract(address, _abi, signerOrProvider) as Breakwater;
  }
}
